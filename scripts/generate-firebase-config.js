#!/usr/bin/env node

/**
 * Generate firebase-config.js for service worker
 * This script reads environment variables and creates a config file
 * that the service worker can import
 */

const fs = require('fs');
const path = require('path');

// Load environment variables from .env file manually (no dotenv dependency)
const envPath = path.join(__dirname, '..', '.env');
if (fs.existsSync(envPath)) {
  const envContent = fs.readFileSync(envPath, 'utf8');
  envContent.split(/\r?\n/).forEach(line => {
    // Skip comments and empty lines
    if (line.startsWith('#') || !line.trim()) return;

    const match = line.match(/^([^=]+)=(.*)$/);
    if (match) {
      const key = match[1].trim();
      const value = match[2].trim();
      process.env[key] = value;
    }
  });
}

console.log('Environment variables loaded from:', envPath);
console.log('Sample values:', {
  apiKey: process.env.NEXT_PUBLIC_FIREBASE_API_KEY?.substring(0, 10) + '...',
  projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID
});

// Read Firebase environment variables
const firebaseConfig = {
  apiKey: process.env.NEXT_PUBLIC_FIREBASE_API_KEY || '',
  authDomain: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN || '',
  projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID || '',
  storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET || '',
  messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID || '',
  appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID || '',
  measurementId: process.env.NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID || ''
};

// Validate that all required values are present
const missingVars = [];
Object.entries(firebaseConfig).forEach(([key, value]) => {
  if (!value && key !== 'measurementId') { // measurementId is optional
    missingVars.push(`NEXT_PUBLIC_FIREBASE_${key.replace(/([A-Z])/g, '_$1').toUpperCase()}`);
  }
});

if (missingVars.length > 0) {
  console.error('❌ Missing Firebase environment variables:');
  missingVars.forEach(v => console.error(`   - ${v}`));
  console.error('\nPlease add these to your .env file');
  process.exit(1);
}

// Generate the config file content
const configContent = `// Firebase Configuration for Service Worker
// ⚠️ AUTO-GENERATED - DO NOT EDIT MANUALLY
// This file is generated by scripts/generate-firebase-config.js
// Last generated: ${new Date().toISOString()}

const firebaseConfig = ${JSON.stringify(firebaseConfig, null, 2)};
`;

// Write to public folder
const outputPath = path.join(__dirname, '..', 'public', 'firebase-config.js');
fs.writeFileSync(outputPath, configContent, 'utf8');

console.log('✅ Firebase config generated successfully');
console.log(`📁 Location: ${outputPath}`);
console.log('🔧 Config values:');
Object.entries(firebaseConfig).forEach(([key, value]) => {
  const displayValue = value ? `${value.substring(0, 20)}...` : '(empty)';
  console.log(`   ${key}: ${displayValue}`);
});
